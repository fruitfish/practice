题目：相交链表
编写一个程序，找到两个单链表相交的起始节点。
例如，下面的两个链表：
A:          a1 → a2
                   ↘
                     c1 → c2 → c3
                   ↗
B:     b1 → b2 → b3


解题思路：（用题目给的例子解释）
首先有一点非常重要，相交节点后的所有节点 (包括相交节点) 都是两个链表共享的。
我们将两个链表的右端对齐，长度较大的链表的左端的多出来的节点肯定不是相交节点，所以我们不考虑左端的这一部分的节点。

A ：     a1 -> a2 -> c1 -> c2 -> c3
B ： b1 -> b2 -> b3 -> c1 -> c2 -> c3

headALength = 5，headBLength = 6，B链表的长度较大

右端对齐，B的左端不考虑，也就是不考虑 节点b1

A从a1开始， B从b2开始，同时往右遍历，逐一比较，比较a1 和 b2 ， a2 和 b3 ... ...
遍历到的第一个相同的节点，就是两个链表相交的起始节点（相交节点）

代码解释：
第1,2个循环是  计算headA 和 headB 两个链表的长度
第3,4个循环是  将headA 和 headB 移到要进行节点比较的位置   //只需移动长度较大的链表
第5个循环是  进行节点比较，如果有相同节点，直接返回该相交节点
